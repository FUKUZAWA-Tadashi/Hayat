======================================================================
======================================================================

バイトコードデータ構造   Ver 0x01
*.hyb

======================================================================
======================================================================


// +---------- 4バイトアライン
// | 識別情報
+---------- 4バイトアライン
| リンク情報
+---------- 4バイトアライン
| 文字列情報
+---------- 4バイトアライン
| シグネチャテーブル
+---------- 4バイトアライン
| クラス情報
+---------- 4バイトアライン


//========================================
//※ 識別情報
//========================================
// 現在使用していない


+---------- 4バイトアライン
| +------ マジックナンバー (EUC-JP で "寿")
| | u8  0xBC
| | u8  0xF7
| +------
| u8 Endian  LITTLE = 0, BIG = 1
| u8 未使用
| u8 メジャーバージョン
| u8 バイトコードバージョン
| u8 コンパイラリビジョン
| u8 未使用
+---------- 4バイトアライン


========================================
※ リンク情報
========================================

+---------- 4バイトアライン
| u16 リンクパッケージ個数
| u16 未使用
| SymbolID_t パッケージシンボル
+----------
| | SymbolID_t リンクバイトコードのシンボル  (require順)
| | × リンクバイトコード個数
+----------
| パディング 0〜2バイト
+---------- 4バイトアライン
| リンクバイトコード名文字列テーブル
| +------
| | u32 文字列サイズ
| +------
| | '\0' 区切りの文字列 
| | (require順)
| | (全部で文字列サイズbytes)
| +------
| | パディング 0〜3バイト
| +------ 4バイトアライン
+---------- 



========================================
※ 文字列情報
========================================

+---------- 4バイトアライン
| u32 文字列サイズ
+---------- 
| '\0' 区切りの文字列 
| (全部で {文字列サイズ}bytes)
+---------- 
| パディング 0〜3バイト
+---------- 4バイトアライン



========================================
※ シグネチャテーブル
========================================

+---------- 4バイトアライン
| u32 テーブル個数
+---------- 
| | u32 テーブルオフセット
| | × テーブル個数
+---------- 
| u32 テーブルサイズ
+---------- 
| テーブル
| (全部で {テーブルサイズ}bytes)
| 
| 
+---------- 
| パディング 0〜3バイト
+---------- 4バイトアライン
| | u8 引数の個数
| | × テーブル個数
+---------- 
| パディング 0〜3バイト
+---------- 4バイトアライン


========================================
※ クラス情報
========================================

+---------- 4バイトアライン
| u16 フラグ          bit 0 = primitive flag
| u16 メソッド数
| u16 インナークラス数
| u16 スーパークラス数
| u16 クラス変数数
| u16 メンバ変数数
| u16 定数数
| u16 デフォルト値数
| u16 クロージャ数
| u16 未使用2バイト
+---------- 4バイトアライン
| | SymbolID_t メソッド名シンボル
| | × メソッド数
+----------
| | SymbolID_t インナークラス名シンボル
| | × インナークラス数
+----------
| | SymbolID_t クラス変数シンボル
| | × クラス変数数
+----------
| | SymbolID_t メンバ変数シンボル
| | × メンバ変数数
+----------
| | SymbolID_t 定数シンボル
| | × 定数数
+----------
+ (必要ならパディング2バイト)
+---------- 4バイトアライン
| | u32 メソッドオフセット → ロード後バイトコードアドレスに書換える
| | × メソッド数
+----------
| | u32 クロージャオフセット →  ロード後バイトコードアドレスに書換える
| | × クロージャ数
+----------
| | u32 インナークラスオフセット → ロード後、JClass* に書換える
| | × インナークラス数
+----------
| u32 インナークラスバイトコードの終了位置オフセット
+----------
| | u32 スーパークラスリンク → ロード後、JClass* に書換える
| | × スーパークラス数
+----------
|
| usingパス情報(※別記)
|
+---------- メソッドオフセット 0
| 初期化ルーチンバイトコード
+---------- 4バイトアライン
| | メソッドバイトコード 
| | × メソッド数
+---------- 4バイトアライン
| | インナークラスバイトコード 
| | × インナークラス数
+---------- 4バイトアライン


  

========================================
※ usingパス情報
========================================


ロード前
+----------
| u16 usingパス情報部分の総バイト数
| u16 未使用2バイト
| パス情報並び(SymbolID_t)
|    using Ac::Bc::Cc だったら、 {Ac},{Bc},{Cc},SYMBOL_ID_ERROR
|    これがいくつか並んだ後、SYMBOL_ID_ERROR がパス情報終了マーク
| パディング
+---------- 4バイトアライン


ロード後
+----------
| パスをクラスへのポインタに変換したもの ×個数
| パディング
+---------- 4バイトアライン

パディングは、ロード前とロード後のバイト数が同じになり、4バイトアラインに
なるように入れられる。





========================================
※メソッドバイトコード構造
========================================


+---------- オフセット 0   4バイトアライン
| +---------- ジャンプテーブル
| | u16 ジャンプテーブルの次のアドレスオフセット (*Aのオフセット)
| +---------- オフセット 2
| | u8 JumpControlテーブル個数
| | u8 未使用
| +---------- オフセット 4
| | | u16 JumpControlテーブルオフセット
| | | × JumpControlテーブル個数
| +----------
| | パディング 0〜2 バイト
| +---------- 4バイトアライン
| | +---------- JumpControlテーブル
| | | u8 ラベル数
| | | u8 未使用
| | | u16 未使用
| | +----------
| | | | SymbolID_t ラベルシンボル (シンボル順にソート済み)
| | | | × ラベル数
| | +----------
| | | パディング 0〜2 バイト
| | +---------- 4バイトアライン
| | | | s32 ジャンプ先アドレス (jumpControlStartの次の命令を0とする相対アドレス)
| | | | × ラベル数
| | +---------- 4バイトアライン
| +- × JumpControlテーブル個数
+---------- (*A) 4バイトアライン
| u16 メソッドシグネチャ
| u16 デフォルト値テーブルオフセット
| u8 ローカル変数の個数
| パディング 3バイト
+----------
|
|  バイトコード本体
|


| パディング 0〜3 バイト
+---------- 4バイトアライン


