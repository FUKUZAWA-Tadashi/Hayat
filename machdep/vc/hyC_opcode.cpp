/*  this file was generated by common/opcodeDef.rb . DO NOT EDIT!  */

#include "hyC_opcode.h"

using namespace Hayat::Compiler;

#define DECL_OPCODE0(op)                        \
    void OP_##op::addCodeTo(Bytecode& b)          \
    {                                           \
        b.addCode<hyu8>(OPL_##op);                  \
    }

#define DECL_OPCODE1(op, opr1)                          \
    void OP_##op::addCodeTo(Bytecode& b, OPR_##opr1 v1)   \
    {                                                   \
        b.addCode<hyu8>(OPL_##op);                          \
        v1.addCodeTo(b);                                \
    }

#define DECL_OPCODE2(op, opr1, opr2)                                    \
    void OP_##op::addCodeTo(Bytecode& b, OPR_##opr1 v1, OPR_##opr2 v2)    \
    {                                                                   \
        b.addCode<hyu8>(OPL_##op);                                          \
        v1.addCodeTo(b);                                                \
        v2.addCodeTo(b);                                                \
    }

#define DECL_OPCODE3(op, opr1, opr2, opr3)                              \
    void OP_##op::addCodeTo(Bytecode& b, OPR_##opr1 v1, OPR_##opr2 v2, OPR_##opr3 v3)    \
    {                                                                   \
        b.addCode<hyu8>(OPL_##op);                                      \
        v1.addCodeTo(b);                                                \
        v2.addCodeTo(b);                                                \
        v3.addCodeTo(b);                                                \
    }


DECL_OPCODE0(nop);
DECL_OPCODE0(copy_top);
DECL_OPCODE0(copy_2nd);
DECL_OPCODE0(copy_3rd);
DECL_OPCODE0(push_nil);
DECL_OPCODE0(push_self);
DECL_OPCODE0(push_i0);
DECL_OPCODE0(push_i1);
DECL_OPCODE0(push_im1);
DECL_OPCODE1(push_i8, INT8);
DECL_OPCODE1(push_i, INT);
DECL_OPCODE0(push_f0);
DECL_OPCODE0(push_f1);
DECL_OPCODE0(push_fm1);
DECL_OPCODE1(push_f, FLOAT);
DECL_OPCODE1(push_strconst, STRCONST);
DECL_OPCODE1(push_symbol, SYMBOL);
DECL_OPCODE0(push_true);
DECL_OPCODE0(push_false);
DECL_OPCODE1(substArray, UINT8);
DECL_OPCODE1(substHash, UINT8);
DECL_OPCODE0(pushEmptyList);
DECL_OPCODE0(cons);
DECL_OPCODE0(pop);
DECL_OPCODE0(drop_2nd);
DECL_OPCODE1(insMethod_0, METHOD);
DECL_OPCODE1(insMethod_1, METHOD);
DECL_OPCODE1(insMethod_2, METHOD);
DECL_OPCODE2(insMethod, SIGNATURE, METHOD);
DECL_OPCODE1(insMethodR_1, METHOD);
DECL_OPCODE1(insMethodR_2, METHOD);
DECL_OPCODE2(insMethodR, SIGNATURE, METHOD);
DECL_OPCODE1(method_0, METHOD);
DECL_OPCODE1(method_1, METHOD);
DECL_OPCODE1(method_2, METHOD);
DECL_OPCODE2(method, SIGNATURE, METHOD);
DECL_OPCODE2(scopeMethod, SIGNATURE, METHOD);
DECL_OPCODE2(new, CLASS, SIGNATURE);
DECL_OPCODE1(getLocal, LOCALVAR);
DECL_OPCODE1(setLocal, LOCALVAR);
DECL_OPCODE1(getClassVar, CLASSVAR);
DECL_OPCODE1(setClassVar, CLASSVAR);
DECL_OPCODE1(getMembVar, MEMBVAR);
DECL_OPCODE1(setMembVar, MEMBVAR);
DECL_OPCODE1(getGlobal, GLOBALVAR);
DECL_OPCODE1(setGlobal, GLOBALVAR);
DECL_OPCODE1(getClass, CLASS);
DECL_OPCODE1(getConstVar, CONSTVAR);
DECL_OPCODE1(setConstVar, CONSTVAR);
DECL_OPCODE1(getMember, MEMBVAR);
DECL_OPCODE2(setMember, MEMBVAR, METHOD);
DECL_OPCODE1(setDefaultVal, UINT16);
DECL_OPCODE0(return);
DECL_OPCODE0(returnAway);
DECL_OPCODE1(jump, RELATIVE);
DECL_OPCODE1(jump_ifFalse, RELATIVE);
DECL_OPCODE1(jump_ifTrue, RELATIVE);
DECL_OPCODE1(jumpControl, JUMPSYMBOL);
DECL_OPCODE0(goto);
DECL_OPCODE1(classInit, CLASS);
DECL_OPCODE0(waitTick_1);
DECL_OPCODE0(waitTicks);
DECL_OPCODE1(getScopeClass, SCOPE);
DECL_OPCODE1(getClassConst, CONSTVAR);
DECL_OPCODE1(getScopedVal, SYMBOL);
DECL_OPCODE3(jumpControlStart, MAYLOCALVAR, MAYLOCALVAR, UINT8);
DECL_OPCODE0(jumpControlEnd);
DECL_OPCODE0(throw);
DECL_OPCODE0(jump_finally);
DECL_OPCODE0(end_finally);
DECL_OPCODE2(closure, UINT16, UINT8);
DECL_OPCODE2(shareLocal, UINT16, UINT16);
DECL_OPCODE0(yield);
DECL_OPCODE0(beFiber);
DECL_OPCODE0(copy_top_2nd);
DECL_OPCODE0(swap);
DECL_OPCODE0(rotate_r);
DECL_OPCODE1(ms_right, UINT16);
DECL_OPCODE2(ms_testLeft, UINT16, RELATIVE);
DECL_OPCODE0(ms_end);
DECL_OPCODE1(getSomething, SYMBOL);
DECL_OPCODE2(sprintf, STRCONST, UINT8);


#undef DECL_OPCODE0
#undef DECL_OPCODE1
#undef DECL_OPCODE2
