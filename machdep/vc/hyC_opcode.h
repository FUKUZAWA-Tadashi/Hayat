/*  this file was generated by common/opcodeDef.rb . DO NOT EDIT!  */

#ifndef _HYCOPCODE_H_
#define _HYCOPCODE_H_

#include "hyCOperand.h"

namespace Hayat {
    namespace Compiler {

        enum OpcodeLabel_e {
            OPL_nop,
            OPL_copy_top,
            OPL_copy_2nd,
            OPL_copy_3rd,
            OPL_push_nil,
            OPL_push_self,
            OPL_push_i0,
            OPL_push_i1,
            OPL_push_im1,
            OPL_push_i8,
            OPL_push_i,
            OPL_push_f0,
            OPL_push_f1,
            OPL_push_fm1,
            OPL_push_f,
            OPL_push_strconst,
            OPL_push_symbol,
            OPL_push_true,
            OPL_push_false,
            OPL_substArray,
            OPL_substHash,
            OPL_pushEmptyList,
            OPL_cons,
            OPL_pop,
            OPL_drop_2nd,
            OPL_insMethod_0,
            OPL_insMethod_1,
            OPL_insMethod_2,
            OPL_insMethod,
            OPL_insMethodR_1,
            OPL_insMethodR_2,
            OPL_insMethodR,
            OPL_method_0,
            OPL_method_1,
            OPL_method_2,
            OPL_method,
            OPL_scopeMethod,
            OPL_new,
            OPL_getLocal,
            OPL_setLocal,
            OPL_getClassVar,
            OPL_setClassVar,
            OPL_getMembVar,
            OPL_setMembVar,
            OPL_getGlobal,
            OPL_setGlobal,
            OPL_getClass,
            OPL_getConstVar,
            OPL_setConstVar,
            OPL_getMember,
            OPL_setMember,
            OPL_setDefaultVal,
            OPL_return,
            OPL_returnAway,
            OPL_jump,
            OPL_jump_ifFalse,
            OPL_jump_ifTrue,
            OPL_jumpControl,
            OPL_goto,
            OPL_classInit,
            OPL_waitTick_1,
            OPL_waitTicks,
            OPL_getScopeClass,
            OPL_getClassConst,
            OPL_getScopedVal,
            OPL_jumpControlStart,
            OPL_jumpControlEnd,
            OPL_throw,
            OPL_jump_finally,
            OPL_end_finally,
            OPL_closure,
            OPL_shareLocal,
            OPL_yield,
            OPL_beFiber,
            OPL_copy_top_2nd,
            OPL_swap,
            OPL_rotate_r,
            OPL_ms_right,
            OPL_ms_testLeft,
            OPL_ms_end,
            OPL_getSomething,
            OPL_sprintf,
        };

        // オペランド無しのオペコード
#define DEF_OPCODE0(op)                         \
        class OP_##op {                         \
        public:                                 \
            static void addCodeTo(Bytecode& b);   \
        };

        // オペランド1個のオペコード
#define DEF_OPCODE1(op,opr1)                            \
        class OP_##op {                                 \
        public:                                         \
            static void addCodeTo(Bytecode& b, OPR_##opr1 v1);  \
        };

        // オペランド2個のオペコード
#define DEF_OPCODE2(op,opr1,opr2)                               \
        class OP_##op {                                         \
        public:                                                 \
            static void addCodeTo(Bytecode& b, OPR_##opr1 v1, OPR_##opr2 v2); \
        };


        // オペランド3個のオペコード
#define DEF_OPCODE3(op,opr1,opr2,opr3)                          \
        class OP_##op {                                         \
        public:                                                 \
            static void addCodeTo(Bytecode& b, OPR_##opr1 v1, OPR_##opr2 v2, OPR_##opr3 v3); \
        };

        DEF_OPCODE0(nop);
        DEF_OPCODE0(copy_top);
        DEF_OPCODE0(copy_2nd);
        DEF_OPCODE0(copy_3rd);
        DEF_OPCODE0(push_nil);
        DEF_OPCODE0(push_self);
        DEF_OPCODE0(push_i0);
        DEF_OPCODE0(push_i1);
        DEF_OPCODE0(push_im1);
        DEF_OPCODE1(push_i8, INT8);
        DEF_OPCODE1(push_i, INT);
        DEF_OPCODE0(push_f0);
        DEF_OPCODE0(push_f1);
        DEF_OPCODE0(push_fm1);
        DEF_OPCODE1(push_f, FLOAT);
        DEF_OPCODE1(push_strconst, STRCONST);
        DEF_OPCODE1(push_symbol, SYMBOL);
        DEF_OPCODE0(push_true);
        DEF_OPCODE0(push_false);
        DEF_OPCODE1(substArray, UINT8);
        DEF_OPCODE1(substHash, UINT8);
        DEF_OPCODE0(pushEmptyList);
        DEF_OPCODE0(cons);
        DEF_OPCODE0(pop);
        DEF_OPCODE0(drop_2nd);
        DEF_OPCODE1(insMethod_0, METHOD);
        DEF_OPCODE1(insMethod_1, METHOD);
        DEF_OPCODE1(insMethod_2, METHOD);
        DEF_OPCODE2(insMethod, SIGNATURE, METHOD);
        DEF_OPCODE1(insMethodR_1, METHOD);
        DEF_OPCODE1(insMethodR_2, METHOD);
        DEF_OPCODE2(insMethodR, SIGNATURE, METHOD);
        DEF_OPCODE1(method_0, METHOD);
        DEF_OPCODE1(method_1, METHOD);
        DEF_OPCODE1(method_2, METHOD);
        DEF_OPCODE2(method, SIGNATURE, METHOD);
        DEF_OPCODE2(scopeMethod, SIGNATURE, METHOD);
        DEF_OPCODE2(new, CLASS, SIGNATURE);
        DEF_OPCODE1(getLocal, LOCALVAR);
        DEF_OPCODE1(setLocal, LOCALVAR);
        DEF_OPCODE1(getClassVar, CLASSVAR);
        DEF_OPCODE1(setClassVar, CLASSVAR);
        DEF_OPCODE1(getMembVar, MEMBVAR);
        DEF_OPCODE1(setMembVar, MEMBVAR);
        DEF_OPCODE1(getGlobal, GLOBALVAR);
        DEF_OPCODE1(setGlobal, GLOBALVAR);
        DEF_OPCODE1(getClass, CLASS);
        DEF_OPCODE1(getConstVar, CONSTVAR);
        DEF_OPCODE1(setConstVar, CONSTVAR);
        DEF_OPCODE1(getMember, MEMBVAR);
        DEF_OPCODE2(setMember, MEMBVAR, METHOD);
        DEF_OPCODE1(setDefaultVal, UINT16);
        DEF_OPCODE0(return);
        DEF_OPCODE0(returnAway);
        DEF_OPCODE1(jump, RELATIVE);
        DEF_OPCODE1(jump_ifFalse, RELATIVE);
        DEF_OPCODE1(jump_ifTrue, RELATIVE);
        DEF_OPCODE1(jumpControl, JUMPSYMBOL);
        DEF_OPCODE0(goto);
        DEF_OPCODE1(classInit, CLASS);
        DEF_OPCODE0(waitTick_1);
        DEF_OPCODE0(waitTicks);
        DEF_OPCODE1(getScopeClass, SCOPE);
        DEF_OPCODE1(getClassConst, CONSTVAR);
        DEF_OPCODE1(getScopedVal, SYMBOL);
        DEF_OPCODE3(jumpControlStart, MAYLOCALVAR, MAYLOCALVAR, UINT8);
        DEF_OPCODE0(jumpControlEnd);
        DEF_OPCODE0(throw);
        DEF_OPCODE0(jump_finally);
        DEF_OPCODE0(end_finally);
        DEF_OPCODE2(closure, UINT16, UINT8);
        DEF_OPCODE2(shareLocal, UINT16, UINT16);
        DEF_OPCODE0(yield);
        DEF_OPCODE0(beFiber);
        DEF_OPCODE0(copy_top_2nd);
        DEF_OPCODE0(swap);
        DEF_OPCODE0(rotate_r);
        DEF_OPCODE1(ms_right, UINT16);
        DEF_OPCODE2(ms_testLeft, UINT16, RELATIVE);
        DEF_OPCODE0(ms_end);
        DEF_OPCODE1(getSomething, SYMBOL);
        DEF_OPCODE2(sprintf, STRCONST, UINT8);

#undef DEF_OPCODE0
#undef DEF_OPCODE1
#undef DEF_OPCODE2
#undef DEF_OPCODE3

    }
}

#endif /* _HYCOPCODE_H_ */
